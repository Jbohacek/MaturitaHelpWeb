@{
    Layout = "_Layout"; // Nechat jak je

    ViewBag.Title = "Zabezpečení - Encryption";
    ViewBag.Author = "Jakub Boháček";

    ViewBag.GenerateContent = true;
}
<div class="display-1">
    @ViewBag.Title
</div>

<article>
    <p>V MS SQL Serveru můžete používat šifrování k ochraně dat, aby bylo čitelné pouze oprávněným uživatelům. Dva hlavní typy šifrování, které jsou v MS SQL Serveru používány, jsou šifrování pomocí certifikátů a symetrických klíčů.</p>
    <img src="~/Pictures/_Database/Encryption/encryption-hierarchy-stack.gif" class="bg-info img-fluid d-block mx-auto w-50">

</article>
<div class="display-2">Šifrování pomocí certifikátů</div>
<article>
    <p>Certifikáty v MS SQL Serveru jsou digitální identifikátory, které se používají pro různé účely včetně šifrování dat a autentizace. Certifikáty mohou být buď vytvořeny v rámci SQL Serveru, nebo importovány z externích zdrojů.</p>
    <p>Pokud šifrování vrací <pre>NULL</pre> po dokončení, překročili jste limit znaků co snese šifrování. Je potřeba obejít tenot problém, třeba rozdělením řetězce nebo změny šifrovací metody</p>
    <h4>Vytvoření certifikátu</h4>
    <pre><code class="language-sql">CREATE CERTIFICATE MyCertificate
ENCRYPTION BY PASSWORD = 'StrongPassword'
WITH SUBJECT = 'My Certificate';
</code></pre>

    <h4>Použití certifikátu pro šifrování</h4>
    <p>Certifikát může být použit pro šifrování a dešifrování dat. Před použitím certifikátu musíte vytvořit symetrický klíč, který může být šifrován certifikátem.</p>

    <pre><code class="language-sql">CREATE SYMMETRIC KEY MySymmetricKey
WITH ALGORITHM = AES_256
encryption by password = '111111'
</code></pre>

    <h4>Šifrování a dešifrování dat</h4>
    <p>Šifrované a dešifrované data se provádí pomocí symetrického klíče.</p>

    <pre><code class="language-sql">-- Šifrování dat
OPEN SYMMETRIC KEY MySymmetricKey decryption by password = '111111';
DECLARE @@ciphertext VARBINARY(MAX);
SET @@ciphertext = EncryptByKey(Key_GUID('MySymmetricKey'), 'DataToEncrypt');
CLOSE SYMMETRIC KEY MySymmetricKey;

-- Dešifrování dat
OPEN SYMMETRIC KEY MySymmetricKey decryption by password = '111111';
DECLARE @@plaintext NVARCHAR(MAX);
SET @@plaintext = DecryptByKey(@@ciphertext);
CLOSE SYMMETRIC KEY MySymmetricKey;
</code></pre>
</article>

<div class="display-2">Šifrování pomocí symetrických klíčů</div>
<article>
    <p>Symetrické klíče jsou klíče používané pro šifrování a dešifrování dat. V MS SQL Serveru jsou symetrické klíče šifrovány pomocí certifikátů nebo jednoduchého hesla (např. hlavních klíčů serveru).</p>

    <h4>Vytvoření symetrického klíče</h4>
    <pre><code>CREATE SYMMETRIC KEY MySymmetricKey
WITH ALGORITHM = AES_256
encryption by password = '111111'
</code></pre>

    <h4>Šifrování a dešifrování dat</h4>
    <p>Symetrický klíč se používá pro šifrování a dešifrování dat pomocí příkazů EncryptByKey a DecryptByKey.</p>

    <pre><code>-- Šifrování dat
OPEN SYMMETRIC KEY MySymmetricKey decryption by password = '111111'
DECLARE @@ciphertext VARBINARY(MAX);
SET @@ciphertext = EncryptByKey(Key_GUID('MySymmetricKey'), 'DataToEncrypt');
CLOSE SYMMETRIC KEY MySymmetricKey;

-- Dešifrování dat
OPEN SYMMETRIC KEY MySymmetricKey decryption by password = '111111'
DECLARE @@plaintext NVARCHAR(MAX);
SET @@plaintext = DecryptByKey(@@ciphertext);
CLOSE SYMMETRIC KEY MySymmetricKey;
</code></pre>
</article>
<div class="display-2">EncryptByPassPhrase</div>
<article>
    <p>V MS SQL Serveru můžete použít příkaz <code>EncryptByPassPhrase</code> k šifrování dat pomocí fráze. Tato metoda šifrování je jednoduchá a efektivní, protože nevyžaduje vytváření a správu certifikátů nebo symetrických klíčů.</p>
    <h3>Klíčové aspekty používání <code>EncryptByPassPhrase</code>:</h3>
    <h4>Vytvoření šifrovací fráze:</h4>
    <ul>
        <li>Při použití příkazu <code>EncryptByPassPhrase</code> potřebujete šifrovací frázi, kterou použijete k šifrování a dešifrování dat.</li>
        <li>Doporučuje se používat silné a bezpečné fráze, aby byla zajištěna ochrana dat.</li>
    </ul>
    <h4>Šifrování dat pomocí <code class="language-sql">EncryptByPassPhrase</code>:</h4>
    <ul>
        <li>
            Příkaz <code class="language-sql">EncryptByPassPhrase</code> přijímá dvě hlavní argumenty:
            <ul>
                <li>Šifrovací frázi (jako znakový řetězec).</li>
                <li>Data k zašifrování (jako binární data nebo řetězec).</li>
            </ul>
        </li>
        <li>Příkaz vrací zašifrovaná data v binárním formátu.</li>
    </ul>
    <h5>Příklad šifrování:</h5>
    <pre><code>DECLARE @@ciphertext VARBINARY(MAX);
SET @@ciphertext = EncryptByPassPhrase('MyStrongPassphrase', 'DataToEncrypt');</code></pre>
    <h4>Dešifrování dat pomocí <code>DecryptByPassPhrase</code>:</h4>
    <ul>
        <li>Chcete-li dešifrovat data zašifrovaná pomocí <code>EncryptByPassPhrase</code>, použijte příkaz <code>DecryptByPassPhrase</code>.</li>
        <li>
            Příkaz <code class="language-sql">DecryptByPassPhrase</code> přijímá dvě hlavní argumenty:
            <ul>
                <li>Šifrovací frázi (stejnou jako byla použita pro šifrování).</li>
                <li>Zašifrovaná data k dešifrování.</li>
            </ul>
        </li>
    </ul>
    <h5>Příklad dešifrování:</h5>
    <pre><code class="language-sql">DECLARE @@plaintext NVARCHAR(MAX);
SET @@plaintext = DecryptByPassPhrase('MyStrongPassphrase', @@ciphertext);</code></pre>
</article>

<div class="display-2">
    TDE
</div>
<article>
    <p>Transparentní šifrování dat (TDE) v SQL Serveru je funkce, která poskytuje šifrování na úrovni databáze. Tato technologie šifruje data uložená v databázových souborech (data v klidu), což zahrnuje data, indexy a zálohy. Šifrování je transparentní pro aplikace, což znamená, že aplikace pracující s databází si nevšimnou rozdílu ve výkonu nebo chování, protože šifrování a dešifrování se provádí automaticky.</p>

    <h2>Jak TDE funguje:</h2>
    <ul>
        <li><strong>Šifrování dat v klidu:</strong> TDE šifruje celou databázi nebo jednotlivé soubory, včetně všech dat a indexů. To znamená, že data uložená na disku jsou zašifrovaná, což chrání před neoprávněným přístupem.</li>
        <li><strong>Šifrování a dešifrování na pozadí:</strong> Když je TDE aktivováno, šifrování a dešifrování se provádí na pozadí při čtení nebo zápisu dat do databáze. To je pro aplikace transparentní, což znamená, že neexistují žádné změny v kódu aplikací.</li>
        <li><strong>Správa šifrovacích klíčů:</strong> TDE používá klíč správce databáze (DMK) k šifrování klíče pro šifrování databáze (DEK), který je použit k šifrování a dešifrování dat. Klíče mohou být chráněny pomocí modulu správy klíčů (KMS).</li>
        <li><strong>Zálohy jsou také šifrované:</strong> Když je TDE aktivováno, všechny zálohy databází jsou také šifrované. To poskytuje další úroveň ochrany pro vaše data.</li>
    </ul>

    <h2>Postup pro aktivaci TDE:</h2>
    <h3>Vytvoření certifikátu a klíče správce databáze:</h3>
    <p>Vytvořte certifikát v databázi <em>master</em>, který se použije k ochraně klíče pro šifrování databáze.</p>
    <pre><code class="language-sql">USE master;
GO
CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'your_password';
CREATE CERTIFICATE MyServerCert
WITH SUBJECT = 'MyCertificate';</code></pre>

    <h3>Vytvoření šifrovacího klíče databáze:</h3>
    <p>Vytvořte šifrovací klíč databáze a šifrujte jej pomocí certifikátu.</p>
    <pre><code class="language-sql">USE your_database;
GO
CREATE DATABASE ENCRYPTION KEY
WITH ALGORITHM = AES_256
ENCRYPTION BY SERVER CERTIFICATE MyServerCert;</code></pre>

    <h3>Povolení TDE:</h3>
    <p>Povolení šifrování databáze pomocí klíče.</p>
    <pre><code class="language-sql">ALTER DATABASE your_database
SET ENCRYPTION ON;</code></pre>

    <h2>Výhody TDE:</h2>
    <ul>
        <li><strong>Ochrana dat v klidu:</strong> Šifrování dat uložených na disku chrání před neoprávněným přístupem.</li>
        <li><strong>Transparentnost pro aplikace:</strong> Aplikace si nevšimnou žádných změn ve výkonu nebo chování.</li>
        <li><strong>Snadná správa:</strong> Šifrování a dešifrování jsou automatické, což zjednodušuje správu.</li>
    </ul>
</article>