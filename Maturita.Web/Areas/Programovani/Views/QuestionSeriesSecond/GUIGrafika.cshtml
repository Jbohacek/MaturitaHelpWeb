@{
    Layout = "_Layout"; // Nechat jak je

    ViewBag.Title = "Gui grafika";
    ViewBag.Author = "Jakub Boháček";

}

<div class="display-1">
    Gui grafika
</div>

<div class="background-text">
    Kreslí se na jakýkoliv control, primárně na picture box, jde i panel. <br/>
    
    Musí se vložit event <span>paint</span>, na kterým je evenhlander e, který má objekt "Graphics", který umožnuje kdekoliv kreslit
    
    <br/><br/>
    
    <span>Graphics g = e.Graphics;</span>

    <img class="img-fluid w-75 d-block my-4 mx-auto rounded-2" src="~/Pictures/Gui/paint.png"/>

    Paint se vola vždy, když se potřebuje vykreslení, což je při změně rozlišení aplikace. Změnšování a zvětšování. <br/>
    <span>this.picturebox.refresh()</span> spouští <span>paint()</span>
    <br/>
    
    Pokud chceme dostat graphics z controleru používáme :
    <br/><br/>
    <span>graphics g = this.picturebox.createGraphics()</span>
    <br/><br/>
    Ale vše co se nakreslí zmizí po změně rozlišení, jelikož není v <span>Paint</span> metodě
    <br/><br/>
    <span>* Bonus *</span><br/>
    g.smoothingMode = smoothingMode.HighQuality - Zapne vykreslovaní<br/>
    
    <a href="https://learn.microsoft.com/en-us/dotnet/api/system.drawing.drawing2d.smoothingmode?view=dotnet-plat-ext-8.0">Více zde</a>
</div>

<div class="display-3">
    Metody
</div>

<div>
    Používá se souřadnicový systém, který je umístěn v 0,0 a to v levém horním rohu<br/>
    Pozor na odsazování 
    <ul>
        <li><span>draw</span> - Obrys</li>
        <li><span>fill</span> - Vylní</li>
    </ul>

    Příklady:
    <pre>
    <code class="language-csharp">
/* Vykreslí obrys obdelníku 

    Obrys: Červeny

    X: 10
    Y: 10

    Width: 100
    Height: 200
*/
g.drawRectangle(pens.red, 10,10,100,200)

/* Vykreslí plnou elipsu (kruh)

    Vypln: zelený

    X: 10
    Y: 10

    Width: 90
    Height: 100
*/

g.fillElipse(Brushes.Green, 10,10,90,100)
    </code>
</pre>

    <div class="display-5">
        Další metody
    </div>
    <ul>
        <li><a href="https://www.geeksforgeeks.org/graphics-drawarc-method-in-c-sharp-with-examples/">Arc</a> - </li>
        <li><a href="https://www.c-sharpcorner.com/uploadfile/mahesh/drawing-splines-and-curves-in-gdi/">Curve</a></li>
        <li><a>DrawImage</a> - </li>
        <li><a href="https://www.c-sharpcorner.com/UploadFile/mahesh/drawing-lines-in-gdi/">DrawLine</a></li>
        <li><a href="https://www.c-sharpcorner.com/UploadFile/9f4ff8/draw-a-pie-chart-in-C-Sharp/">DrawPie</a></li>
        <li><a href="https://www.c-sharpcorner.com/uploadfile/mahesh/drawing-graphics-shapes/">DrawRectangle</a></li>
        <li><a href="https://www.c-sharpcorner.com/uploadfile/mahesh/drawing-graphics-shapes/">DrawPolygon</a></li>
        <li><a href="https://www.c-sharpcorner.com/UploadFile/mahesh/format-string-in-C-Sharp/">DrawString</a></li>
    </ul>
    Arc = oblouk
    
    bezier = 4 body a 
    
    curve = více bodů a zaoblí
    
    drawimage = obrazek
    
    drawLine = čara
    
    drawPie = pacman
    
    drawRectangle = obdelník

    drawPolygon = trojuhelnik
    
    drawString = text


</div>

<div class="display-3">
    Pen a brush
</div>

<div>
    
    Pens = na čary
    brush = na kreslení
    

    pen p = new Pen(Color.Black, 10);


    // Stačí solidBrush znát, ale je dobré vědět jen o nich
    (abstraktni) Brush b = SolidBrush(Color.FromArgb(R,G,B,A))

    A = pruhlednost

    // napsat zde i pen

    g.DrawString("Hello world", new Font("Arial",30), brushes.Blue, 100,200)



</div>

<div class="display-3">
    DrawString
</div>
<div>
    
    g.drawString()

    Vycentrovani textu,
    
    zjištění velikosti toho textu
    
    SizeF = g.MessureString("Hello string", new Font("Arial",30))
    
    
    existují fonty - proporcialtilní font, kde každý písmenko je stejně velký
    
    například consolas

</div>

<div class="display-3">
    Práce s obrázky
</div>

<div>
    
    Obrazky 
    
    g.drawImage(new bitmap(@@"C:/User/obrazek.png"), X,Y, widht, height)

    prace s bitmapy ano
    
    bitmap bmp = new Bitmap(width,height);
    
    graphics g = Graphics.FromImage(bmp)
    
    // TedKreslim
    
    g.drawLine....
    
    
    bmp.save(@@"C:/User/obrazek.png")

</div>

<div class="display-3">
    Souřadnicový system
</div>

<div>
    
    g.translateTransofrm(50,100) - Posun stredu souradnicového systému
    
    g.rotateTransoform(30) - otačení o 30 stupňů středu souřadnicohé systému
    
    g.scaleTransofrm() - škálování souřadnicového systému násobení
    Zoom například
    
    g.resetTransofrm() - resetuje

</div>